#include <stdio.h>
#include <stdlib.h>

struct stack{
    int top;
    int max;
    int* array;
};

struct stack* create(int max)
{
    struct stack* s=(struct stack*)malloc(sizeof(struct stack));
    s->top=-1;
    s->max=max;
    s->array=(int*)malloc(s->max*sizeof(int));
    return s;
}

int isfull(struct stack* s)
{
    if(s->top==s->max-1)
    return 1;
    return 0;
}

int isempty(struct stack* s)
{
    if(s->top==-1)
    return 1;
    return 0;
}

void push(struct stack* s, int element)
{
    if(isfull(s))
    {
        printf("overflow");
    }
    else
    {
        s->array[++s->top]=element;
        printf("pushed !");
    }
}

void pop(struct stack* s)
{
    if(isempty(s))
    {
        printf("underflow");
    }
    else{
        printf("popped element = %d",s->array[s->top--]);
    }
}

int peek(struct stack* s)
{
    if(isempty(s))
    return -1;
    return s->array[s->top];
}

int main()
{
    int n;
    struct stack* s;
    while(1)
    {
        printf("\n1. create \n2. push \n3.pop \n4.peek \n5. exit \n");
        printf("choice= ");
        scanf("%d", &n);
        switch(n)
        {
            case 1:
            {
                int max;
                printf(" max=");
                scanf("%d",&max);
                 s=create(max);
                break;
            }

            case 2:
            {
                int element;
                printf("element= ");
                scanf("%d",&element);
                push(s,element);
                break;
            }

            case 3:
            {
                pop(s);
                break;
            }

            case 4:
            {
                if(peek(s)==-1)
                printf("underflow");
                else
                printf("top element = %d",peek(s));
                break;
            }

            case 5:
            exit(0);
        }
    }
}
